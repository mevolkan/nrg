{"mappings":"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","sources":["src/scripts/audioanalytics.js"],"sourcesContent":["// This listener is based on David Vallejo's HTML5 video listener, thyngster.com/tracking-html5-videos-gtm/\r\n// Edited by Julius Fedorovicius, analyticsmania.com\r\n\r\n  // Let's wrap everything inside a function so variables are not defined as globals \r\n  (function() {\r\n    // This is gonna our percent buckets ( 10%-90% ) \r\n    var divisor = 10;\r\n    // We're going to save our players status on this object. \r\n    var audios_status = {};\r\n    // This is the funcion that is gonna handle the event sent by the player listeners \r\n    function eventHandler(e) {\r\n        switch (e.type) {\r\n            // This event type is sent everytime the player updated it's current time, \r\n            // We're using for the % of the audio played. \r\n        case 'timeupdate':\r\n            // Let's set the save the current player's audio time in our status object \r\n            audios_status[e.target.id].current = Math.round(e.target.currentTime);\r\n            // We just want to send the percent events once \r\n            var pct = Math.floor(100 * audios_status[e.target.id].current / e.target.duration);\r\n            for (var j in audios_status[e.target.id]._progress_markers) {\r\n                if (pct >= j && j > audios_status[e.target.id].greatest_marker) {\r\n                    audios_status[e.target.id].greatest_marker = j;\r\n                }\r\n            }\r\n            // current bucket hasn't been already sent to GA?, let's push it to GTM\r\n            if (audios_status[e.target.id].greatest_marker && !audios_status[e.target.id]._progress_markers[audios_status[e.target.id].greatest_marker]) {\r\n                audios_status[e.target.id]._progress_markers[audios_status[e.target.id].greatest_marker] = true;\r\n                dataLayer.push({\r\n                    'event': 'audio',\r\n                    'audioPlayerAction': 'Progress %' + audios_status[e.target.id].greatest_marker,\r\n                    // We are using sanitizing the current audio src string, and getting just the audio name part\r\n                    'audioTitle': decodeURIComponent(e.target.currentSrc.split('/')[e.target.currentSrc.split('/').length - 1])\r\n                });\r\n            }\r\n            break;\r\n            // This event is fired when user's click on the play button\r\n        case 'play':\r\n            dataLayer.push({\r\n                'event': 'audio',\r\n                'audioPlayerAction': 'play',\r\n                'audioTitle': decodeURIComponent(e.target.currentSrc.split('/')[e.target.currentSrc.split('/').length - 1])\r\n            });\r\n            break;\r\n            // This event is fied when user's click on the pause button\r\n        case 'pause':\r\n            dataLayer.push({\r\n                'event': 'audio',\r\n                'audioPlayerAction': 'pause',\r\n                'audioTitle': decodeURIComponent(e.target.currentSrc.split('/')[e.target.currentSrc.split('/').length - 1]),\r\n                'audioValue': audios_status[e.target.id].current\r\n            });\r\n            break;\r\n            // If the user ends playing the audio, an Finish audio will be pushed ( This equals to % played = 100 )  \r\n        case 'ended':\r\n            dataLayer.push({\r\n                'event': 'audio',\r\n                'audioPlayerAction': 'finished',\r\n                'audioTitle': decodeURIComponent(e.target.currentSrc.split('/')[e.target.currentSrc.split('/').length - 1])\r\n            });\r\n            break;\r\n        default:\r\n            break;\r\n        }\r\n    }\r\n    // We need to configure the listeners\r\n    // Let's grab all the the \"audio\" objects on the current page     \r\n    var audios = document.getElementsByTagName('audio');\r\n    for (var i = 0; i < audios.length; i++) {\r\n        // In order to have some id to reference in our status object, we are adding an id to the audio objects\r\n        // that don't have an id attribute. \r\n        var audioTagId;\r\n        if (!audios[i].getAttribute('id')) {\r\n            // Generate a random alphanumeric string to use is as the id\r\n            audioTagId = 'html5_audio_' + Math.random().toString(36).slice(2);\r\n            audios[i].setAttribute('id', audioTagId);\r\n        }// Current audio has alredy a id attribute, then let's use it ?\r\n        else {\r\n            audioTagId = audios[i].getAttribute('id');\r\n        }\r\n        // audio Status Object declaration  \r\n        audios_status[audioTagId] = {};\r\n        // We'll save the highest percent mark played by the user in the current audio.\r\n        audios_status[audioTagId].greatest_marker = 0;\r\n        // Let's set the progress markers, so we can know afterwards which ones have been already sent.\r\n        audios_status[audioTagId]._progress_markers = {};\r\n        for (j = 0; j < 100; j++) {\r\n            audios_status[audioTagId].progress_point = divisor * Math.floor(j / divisor);\r\n            audios_status[audioTagId]._progress_markers[audios_status[audioTagId].progress_point] = false;\r\n        }\r\n        // On page DOM, all players currentTime is 0 \r\n        audios_status[audioTagId].current = 0;\r\n        // Now we're setting the event listeners. \r\n        audios[i].addEventListener(\"play\", eventHandler, false);\r\n        audios[i].addEventListener(\"pause\", eventHandler, false);\r\n        audios[i].addEventListener(\"ended\", eventHandler, false);\r\n        audios[i].addEventListener(\"timeupdate\", eventHandler, false);\r\n    }\r\n})();"],"names":[],"version":3,"file":"audio.669d99e4.js.map","sourceRoot":"/__parcel_source_root/"}